#!/bin/bash

# üîß Todo App Codebase Fix Script
# This script applies all the critical fixes identified in the codebase review

set -e

echo "üîß Todo App Codebase Fix Script"
echo "==============================="

# Check if we're in the right directory
if [ ! -d "todo-app-fixed" ] || [ ! -d "material-todo-app" ]; then
    echo "‚ùå Please run this script from the main todo directory"
    echo "   (Should contain todo-app-fixed/ and material-todo-app/ directories)"
    exit 1
fi

echo "üìã Applying critical fixes to ensure smooth setup..."

# =============================================================================
# FIX 1: Basic Version Package.json Cleanup
# =============================================================================
echo ""
echo "üîß Fix 1: Cleaning up basic version dependencies..."

if [ -f "todo-app-fixed/package.json" ]; then
    # Backup original
    cp todo-app-fixed/package.json todo-app-fixed/package.json.backup
    echo "   ‚úÖ Backed up original package.json"
    
    # Apply fixed package.json
    if [ -f "fixed-package-basic.json" ]; then
        cp fixed-package-basic.json todo-app-fixed/package.json
        echo "   ‚úÖ Applied cleaned package.json for basic version"
    else
        echo "   ‚ö†Ô∏è  Fixed package.json not found, skipping"
    fi
else
    echo "   ‚ö†Ô∏è  Basic version package.json not found"
fi

# =============================================================================
# FIX 2: Full Version Package.json Fixes
# =============================================================================
echo ""
echo "üîß Fix 2: Fixing full version package.json issues..."

if [ -f "material-todo-app/package.json" ]; then
    # Backup original
    cp material-todo-app/package.json material-todo-app/package.json.backup
    echo "   ‚úÖ Backed up original package.json"
    
    # Apply fixed package.json
    if [ -f "fixed-package-full.json" ]; then
        cp fixed-package-full.json material-todo-app/package.json
        echo "   ‚úÖ Applied fixed package.json for full version"
    else
        echo "   ‚ö†Ô∏è  Fixed package.json not found, skipping"
    fi
else
    echo "   ‚ö†Ô∏è  Full version package.json not found"
fi

# =============================================================================
# FIX 3: Import Path Fix for Basic Version
# =============================================================================
echo ""
echo "üîß Fix 3: Fixing import paths in basic version..."

if [ -f "todo-app-fixed/src/store/todoStore.ts" ]; then
    # Backup original
    cp todo-app-fixed/src/store/todoStore.ts todo-app-fixed/src/store/todoStore.ts.backup
    echo "   ‚úÖ Backed up original todoStore.ts"
    
    # Fix import path
    sed -i.tmp "s|from '../../shared/types'|from '../shared/types'|g" todo-app-fixed/src/store/todoStore.ts
    rm -f todo-app-fixed/src/store/todoStore.ts.tmp
    echo "   ‚úÖ Fixed import path in todoStore.ts"
else
    echo "   ‚ö†Ô∏è  todoStore.ts not found"
fi

# Clean node_modules and lock files
echo ""
echo "üîß Cleaning for fresh installs..."

for dir in "todo-app-fixed" "material-todo-app"; do
    if [ -d "$dir" ]; then
        rm -rf "$dir/node_modules" "$dir/package-lock.json" "$dir/bun.lock"
        echo "   ‚úÖ Cleaned $dir"
    fi
done

echo ""
echo "üéâ Fixes Applied Successfully!"
echo "Ready for setup! üéØ"